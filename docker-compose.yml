# =============================================================================
# Expo MCP Server - Docker Compose Configuration
# =============================================================================

version: "3.8"

# ネットワーク定義
networks:
  expo-mcp-network:
    driver: bridge
    name: expo-mcp-network

# ボリューム定義
volumes:
  redis_data:
    name: expo-mcp-redis-data
  typesense_data:
    name: expo-mcp-typesense-data
  app_cache:
    name: expo-mcp-app-cache
  local_data:
    name: expo-mcp-local-data

services:
  # =============================================================================
  # Expo MCP API サーバー
  # =============================================================================
  expo-mcp-api:
    build: 
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: expo-mcp-server
    restart: unless-stopped
    
    # セキュリティ設定
    security_opt:
      - no-new-privileges:true
    read_only: true
    cap_drop:
      - ALL
    cap_add:
      - CHOWN
      - SETGID
      - SETUID
    
    # 環境変数
    environment:
      - NODE_ENV=production
      - MCP_MODE=stdio
      - LOG_LEVEL=info
      - LOCAL_STORAGE_PATH=/app/data
      - MAX_STORAGE_SIZE_GB=10
      - REDIS_URL=redis://redis-cache:6379
      - TYPESENSE_URL=http://typesense-search:8108
      - TYPESENSE_API_KEY=xyz
    
    # ボリュームマウント
    volumes:
      - ./data:/app/data:rw
      - app_cache:/app/cache:rw
      - local_data:/app/logs:rw
      # 読み取り専用ファイルシステムのため、tmpディレクトリを作成
      - /tmp
    
    # ポート公開（HTTP フォールバック用）
    ports:
      - "3000:3000"
    
    # ネットワーク
    networks:
      - expo-mcp-network
    
    # ヘルスチェック
    healthcheck:
      test: ["CMD", "node", "health-check.cjs"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    
    # 依存関係 (開発時は基本的な依存のみ)
    depends_on:
      - redis-cache
      - typesense-search
    
    # リソース制限
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.1'

  # =============================================================================
  # Redis キャッシュサーバー
  # =============================================================================
  redis-cache:
    image: redis:7-alpine
    container_name: expo-mcp-redis
    restart: unless-stopped
    
    # セキュリティ設定
    security_opt:
      - no-new-privileges:true
    read_only: true
    
    # Redis設定
    command: >
      redis-server
      --save 60 1
      --loglevel warning
      --maxmemory 512mb
      --maxmemory-policy allkeys-lru
    
    # ボリュームマウント
    volumes:
      - redis_data:/data:rw
      - /tmp
    
    # ネットワーク
    networks:
      - expo-mcp-network
    
    # ヘルスチェック
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 15s
      timeout: 5s
      retries: 3
    
    # リソース制限
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.25'

  # =============================================================================
  # Typesense 検索エンジン
  # =============================================================================
  typesense-search:
    image: typesense/typesense:0.25.1
    container_name: expo-mcp-typesense
    restart: unless-stopped
    
    # セキュリティ設定
    security_opt:
      - no-new-privileges:true
    
    # Typesense設定
    environment:
      - TYPESENSE_DATA_DIR=/data
      - TYPESENSE_API_KEY=xyz
      - TYPESENSE_CORS_DOMAINS=*
    
    # ボリュームマウント
    volumes:
      - typesense_data:/data:rw
    
    # ポート公開
    ports:
      - "8108:8108"
    
    # ネットワーク
    networks:
      - expo-mcp-network
    
    # ヘルスチェック (開発時は無効化)
    # healthcheck:
    #   test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:8108/health"]
    #   interval: 15s
    #   timeout: 5s
    #   retries: 3
    
    # リソース制限
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '0.5' 