{
  "$schema": "https://spec.modelcontextprotocol.io/specification/server/config.schema.json",
  "name": "expo-mcp-server",
  "version": "1.0.0",
  "description": "Model Context Protocol server for Expo ecosystem",
  "protocol": {
    "version": "2024-11-05",
    "transports": {
      "stdio": {
        "enabled": true,
        "encoding": "utf-8",
        "timeout_ms": 5000,
        "max_message_size_bytes": 1048576
      },
      "http": {
        "enabled": true,
        "port": 3000,
        "cors_enabled": true,
        "timeout_ms": 30000,
        "websocket_upgrade": true
      }
    }
  },
  "capabilities": {
    "tools": {
      "listTools": true,
      "callTool": true,
      "count": 8
    },
    "resources": {
      "listResources": true,
      "readResource": true,
      "subscribeResource": true,
      "count": 4
    },
    "prompts": {
      "listPrompts": true,
      "getPrompt": true,
      "count": 4
    },
    "logging": {
      "enabled": true,
      "level": "info"
    },
    "experimental": {
      "sampling": false,
      "roots": false
    }
  },
  "security": {
    "input_validation": {
      "max_tool_args_size_bytes": 2048,
      "max_resource_uri_length": 512,
      "sanitize_file_paths": true,
      "validate_json_schema": true,
      "prevent_code_injection": true
    },
    "access_control": {
      "allowed_hosts": [
        "docs.expo.dev",
        "api.expo.dev",
        "snack.expo.dev",
        "github.com/expo",
        "npm.expo.dev"
      ],
      "rate_limit_per_session": 2000,
      "session_timeout_minutes": 60,
      "require_authentication": false
    },
    "tool_execution": {
      "sandboxing_enabled": true,
      "allowed_file_extensions": [".md", ".json", ".txt", ".js", ".ts"],
      "blocked_system_calls": ["exec", "spawn", "eval"],
      "resource_limits": {
        "max_memory_mb": 256,
        "max_cpu_time_ms": 5000,
        "max_file_reads": 100,
        "max_network_requests": 50
      }
    }
  },
  "performance": {
    "cache": {
      "memory": {
        "max_size_mb": 200,
        "ttl_seconds": 300,
        "eviction": "LRU"
      },
      "redis": {
        "max_size_mb": 1000,
        "ttl_seconds": 3600,
        "cluster_support": true
      },
      "disk": {
        "max_size_gb": 20,
        "ttl_days": 7,
        "compression": true
      }
    },
    "targets": {
      "p95_stdio_latency_ms": 50,
      "p95_search_latency_ms": 100,
      "p95_sdk_lookup_ms": 80,
      "cache_hit_target": 85,
      "concurrent_sessions": 200
    }
  },
  "logging": {
    "level": "info",
    "format": "json",
    "output": ["console", "file"],
    "file_path": "./logs/expo-mcp-server.log",
    "rotation": {
      "max_size_mb": 100,
      "max_files": 10,
      "max_age_days": 30
    },
    "include_mcp_events": true,
    "sensitive_data_masking": true
  },
  "tools": [
    {
      "name": "expo_read_document",
      "description": "Read and retrieve Expo documentation, API references, and guides",
      "inputSchema": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "description": "URL of the Expo documentation page"
          },
          "format": {
            "type": "string",
            "enum": ["markdown", "html", "text"],
            "default": "markdown"
          }
        },
        "required": ["url"]
      }
    },
    {
      "name": "expo_search_documents",
      "description": "Search across Expo ecosystem content with typo tolerance",
      "inputSchema": {
        "type": "object",
        "properties": {
          "query": {
            "type": "string",
            "description": "Search query string"
          },
          "type": {
            "type": "string",
            "enum": ["all", "documentation", "api", "guides", "examples"],
            "default": "all"
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "maximum": 50,
            "default": 10
          }
        },
        "required": ["query"]
      }
    },
    {
      "name": "expo_recommend",
      "description": "Get context-aware recommendations for Expo development",
      "inputSchema": {
        "type": "object",
        "properties": {
          "context": {
            "type": "string",
            "description": "Current development context or code snippet"
          },
          "intent": {
            "type": "string",
            "enum": ["debug", "optimize", "learn", "implement"],
            "default": "learn"
          }
        },
        "required": ["context"]
      }
    },
    {
      "name": "expo_get_sdk_module",
      "description": "Retrieve detailed information about specific Expo SDK modules",
      "inputSchema": {
        "type": "object",
        "properties": {
          "module_name": {
            "type": "string",
            "description": "Name of the Expo SDK module"
          },
          "version": {
            "type": "string",
            "description": "SDK version (defaults to latest)"
          }
        },
        "required": ["module_name"]
      }
    },
    {
      "name": "expo_config_templates",
      "description": "Generate and validate Expo configuration files",
      "inputSchema": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": ["app.json", "eas.json", "metro.config.js", "babel.config.js"],
            "description": "Type of configuration file"
          },
          "platform": {
            "type": "string",
            "enum": ["ios", "android", "web", "all"],
            "default": "all"
          },
          "profile": {
            "type": "string",
            "enum": ["development", "preview", "production"],
            "default": "development"
          }
        },
        "required": ["type"]
      }
    },
    {
      "name": "expo_eas_command_builder",
      "description": "Build and validate EAS CLI commands",
      "inputSchema": {
        "type": "object",
        "properties": {
          "action": {
            "type": "string",
            "enum": ["build", "submit", "update", "device", "credentials"],
            "description": "EAS CLI action to perform"
          },
          "platform": {
            "type": "string",
            "enum": ["ios", "android", "all"],
            "default": "all"
          },
          "options": {
            "type": "object",
            "description": "Additional command options"
          }
        },
        "required": ["action"]
      }
    },
    {
      "name": "expo_code_examples",
      "description": "Retrieve executable code examples with Snack integration",
      "inputSchema": {
        "type": "object",
        "properties": {
          "topic": {
            "type": "string",
            "description": "Topic or feature to get examples for"
          },
          "complexity": {
            "type": "string",
            "enum": ["basic", "intermediate", "advanced"],
            "default": "basic"
          },
          "snack_ready": {
            "type": "boolean",
            "default": true,
            "description": "Generate Snack-compatible code"
          }
        },
        "required": ["topic"]
      }
    },
    {
      "name": "expo_error_diagnosis",
      "description": "Analyze errors and provide solutions for Expo development",
      "inputSchema": {
        "type": "object",
        "properties": {
          "error_message": {
            "type": "string",
            "description": "Error message or stack trace"
          },
          "context": {
            "type": "string",
            "description": "Additional context (platform, SDK version, etc.)"
          },
          "suggest_fixes": {
            "type": "boolean",
            "default": true,
            "description": "Include suggested fixes"
          }
        },
        "required": ["error_message"]
      }
    }
  ],
  "resources": [
    {
      "uri": "expo://docs/latest",
      "name": "Latest Expo Documentation",
      "description": "Latest version of Expo documentation"
    },
    {
      "uri": "expo://sdk/latest",
      "name": "Latest SDK Reference",
      "description": "Latest Expo SDK API reference"
    },
    {
      "uri": "expo://guides/setup",
      "name": "Setup Guides",
      "description": "Installation and setup guides"
    },
    {
      "uri": "expo://examples/community",
      "name": "Community Examples",
      "description": "Community-contributed code examples"
    }
  ],
  "prompts": [
    {
      "name": "expo_quickstart",
      "description": "Quick start guide for Expo development",
      "arguments": [
        {
          "name": "project_type",
          "description": "Type of project to create",
          "required": false
        }
      ]
    },
    {
      "name": "expo_debugging",
      "description": "Debugging assistance for Expo projects",
      "arguments": [
        {
          "name": "issue_description",
          "description": "Description of the issue",
          "required": true
        }
      ]
    },
    {
      "name": "expo_api_usage",
      "description": "API usage examples and best practices",
      "arguments": [
        {
          "name": "module_name",
          "description": "Expo SDK module name",
          "required": true
        }
      ]
    },
    {
      "name": "expo_config_analyzer",
      "description": "Configuration analysis and optimization",
      "arguments": [
        {
          "name": "config_content",
          "description": "Current configuration content",
          "required": true
        }
      ]
    }
  ],
  "installation": {
    "npm": {
      "global": "npm install -g expo-mcp-server",
      "local": "npm install expo-mcp-server"
    },
    "usage": {
      "stdio": "expo-mcp-server --stdio",
      "http": "expo-mcp-server --port 3000",
      "help": "expo-mcp-server --help"
    }
  },
  "clientIntegration": {
    "cursor": {
      "configPath": "~/.cursor/mcp_servers.json",
      "config": {
        "expo-mcp-server": {
          "command": "expo-mcp-server",
          "args": ["--stdio"]
        }
      }
    },
    "claude_desktop": {
      "configPath": "~/Library/Application Support/Claude/claude_desktop_config.json",
      "config": {
        "mcpServers": {
          "expo-mcp-server": {
            "command": "expo-mcp-server",
            "args": ["--stdio"]
          }
        }
      }
    }
  }
} 